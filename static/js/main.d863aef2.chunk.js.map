{"version":3,"sources":["Poster.js","MovieContainer.js","movie.png","Form.js","Header.js","Trailer.js","SelectedMovie.js","fetch.js","SelectedPage.js","App.js","reportWebVitals.js","index.js"],"names":["Poster","id","poster_path","title","backdrop_path","average_rating","release_date","className","src","alt","MovieContainer","movies","filteredMovies","movieCards","map","movie","to","filteredMovieCards","length","Form","filterMovies","type","name","placeholder","onChange","e","target","value","Header","Trailer","state","trailerInfo","fetch","this","props","then","res","json","data","selectedTrailer","videos","find","setState","trailer","Fragment","key","frameBorder","allow","allowFullScreen","Component","SelectedMovie","getDate","dateStr","date","Date","getMonth","getDay","getFullYear","getTime","mins","hours","Math","floor","remainingMins","formatNumber","num","Intl","NumberFormat","format","movieInfo","error","ok","message","catch","err","overview","tagline","round","genres","join","Number","budget","revenue","runtime","SelectedPage","useParams","movieId","App","componentDidMount","filter","entry","toLowerCase","includes","currentSection","selectedID","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d863aef2.chunk.js","sourcesContent":["import React from 'react'\nimport './Poster.css'\n\nconst Poster = ({id, poster_path, backdrop_path, title, average_rating, release_date}) => {\n  return (\n    <div className='poster'>\n      <img className='poster-img' src={poster_path} alt=\"Movie poster\" />\n      <h2 className='poster-title'>{title}</h2>\n    </div>\n  )\n}\n\nexport default Poster\n\n","import React from 'react';\nimport Poster from './Poster'\nimport { Link } from 'react-router-dom';\nimport './MovieContainer.css'\n\nconst MovieContainer = ({movies, filteredMovies}) => {\n  const movieCards = movies.map(movie => {\n    return (\n      <Link to={'/' + movie.id} key={movie.id} className='movie-link'>\n        <Poster \n          id={movie.id}\n          poster_path={movie.poster_path}\n          backdrop_path={movie.backdrop_path}\n          title={movie.title}\n          average_rating={movie.average_rating}\n          release_date={movie.release_date}\n        />\n      </Link>\n    )\n  })\n\n  const filteredMovieCards = filteredMovies.map(movie => {\n    return (\n      <Link to={'/' + movie.id} key={movie.id} className='movie-link'>\n        <Poster \n          id={movie.id}\n          poster_path={movie.poster_path}\n          backdrop_path={movie.backdrop_path}\n          title={movie.title}\n          average_rating={movie.average_rating}\n          release_date={movie.release_date}\n        />\n      </Link>\n    )\n  })\n\n  return (\n      <div className='movie-container'>\n        {!filteredMovies.length ? movieCards : filteredMovieCards}\n      </div>\n  )\n}\n\nexport default MovieContainer","export default __webpack_public_path__ + \"static/media/movie.251c98b2.png\";","import React from 'react';\nimport './Form.css';\n\nconst Form = ( {filterMovies} ) => {\n    return (\n      <form>\n        <input \n          className='search-bar' \n          type=\"text\" \n          name=\"search\" \n          placeholder=\"search for a movie\"\n          onChange={(e) => filterMovies(e.target.value)}\n        />\n      </form>\n    )\n}\n\nexport default Form;","import React from 'react';\nimport './Header.css';\nimport movie from './movie.png';\nimport Form from './Form'\n\nconst Header = ({filterMovies}) => {\n  return (\n    <header>\n    <img className='logo' src={movie} alt='movie' />\n    <div className='search-container'>\n      <h1>Rancid Tomatillos</h1>\n      <Form \n        filterMovies={filterMovies}\n      />\n    </div>\n    </header>\n  )\n}\n\nexport default Header;","import React, { Component } from 'react';\nimport './Trailer.css';\n\nclass Trailer extends Component {\n  constructor() {\n    super()\n    this.state = {\n      trailerInfo: {}\n    }\n  }\n  componentDidMount() {\n    fetch(`https://rancid-tomatillos.herokuapp.com/api/v2/movies/${this.props.id}/videos`)\n    .then(res => res.json())\n    .then(data => {\n      const selectedTrailer = data.videos.find(movie => movie.type === 'Trailer');\n      this.setState({trailerInfo: selectedTrailer});\n    })\n  }\n\n  render() {\n    const trailer = this.state.trailerInfo;\n    return (\n      <React.Fragment>\n        {trailer.id && <article className=\"trailer\">\n          <h3 className=\"trailer-title\">Trailer</h3>\n          <iframe className=\"trailer-video\"  src={\"https://www.youtube.com/embed/\" + trailer.key} title=\"YouTube video player\" frameBorder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\n        </article>}\n      </React.Fragment>\n    )\n  }\n}\n\nexport default Trailer;","import React, { Component } from 'react';\nimport Trailer from './Trailer.js'\nimport { Link } from 'react-router-dom'; \nimport { singleMovieData } from './fetch.js';\nimport './SelectedMovie.css';\n\nclass SelectedMovie extends Component {\n  constructor() {\n    super()\n    this.state = {\n      movieInfo: {},\n      error: ''\n    }\n  }\n\n  componentDidMount() {\n    return singleMovieData(this.props.id)\n      .then(data => this.setState({movieInfo: data.movie}))\n      .catch(err => {\n        this.setState({error: err})\n      });\n  }\n\n  getDate = (dateStr) => {\n    const months = ['January', 'December', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n    let date = new Date(dateStr);\n    return `${months[date.getMonth()]} ${date.getDay()}, ${date.getFullYear()}`\n  }\n  \n  getTime = (mins) => {\n    const hours = Math.floor(mins / 60);\n    const remainingMins = mins % 60;\n    return `${hours} ${(hours > 1) ? 'hours' : 'hour'} ${remainingMins} minutes`\n  }\n\n  formatNumber = (num) => {\n    return new Intl.NumberFormat('en-US').format(num);\n  }\n  \n  render() {\n    const movie = this.state.movieInfo;\n    return (\n      <React.Fragment>\n        {movie.title &&\n        <main className='selected-page'>\n          <img className='selected-poster' src={movie.poster_path} alt='movie poster' />\n          <section className='selected-details'>\n            <h2 className='selected-title'>{movie.title}</h2>\n            <p className='movie-detail overview'>{movie.overview}</p>\n            {movie.tagline && <p className='movie-detail'><strong>Tagline: </strong>{movie.tagline}</p>}\n            <p className='movie-detail'><strong>Rating: </strong>⭐️ {Math.round(movie.average_rating)}/10</p>\n            <p className='movie-detail'><strong>Genres: </strong> {movie.genres.join(', ')}</p>\n            <p className='movie-detail'><strong>Release Date: </strong>{this.getDate(movie.release_date)}</p>\n            {Number(movie.budget) > 0 && <p className='movie-detail'><strong>Budget: </strong>${this.formatNumber(movie.budget)}</p>}\n            {Number(this.formatNumber(movie.revenue)) > 0 && <p className='movie-detail'><strong>Revenue: </strong>${movie.revenue}</p>}\n            <p className='movie-detail'><strong>Runtime: </strong>{this.getTime(movie.runtime)}</p>\n            <Trailer id={movie.id}/>\n            <Link to=\"/\">\n            <button className='return-button'>Return</button>\n            </Link>\n          </section>\n          {this.state.error && <p>Something went wrong -- check your network</p>}\n        </main>}\n      </React.Fragment>\n    )\n  }\n}\n\nexport default SelectedMovie;","export const allMovieData = () => {\n  return fetch('https://rancid-tomatillos.herokuapp.com/api/v2/movies')\n    .then(res => {\n      if (res.ok) {\n        return res.json()\n      } else {\n        throw res.message\n      }\n    })\n  }\n\nexport const singleMovieData = (id) => {\n  return fetch('https://rancid-tomatillos.herokuapp.com/api/v2/movies/'+ id)\n    .then(res => {\n      if (res.ok) {\n        return res.json()\n      } else {\n        throw res.message\n      }\n    })\n}\n\n\n  ","import React from 'react';\nimport { useParams } from 'react-router';\nimport SelectedMovie from './SelectedMovie';\nimport './SelectedPage.css';\n\nconst SelectedPage = () => {\n  const id = useParams().movieId;\n  return <SelectedMovie id={id} />\n}\n\nexport default SelectedPage;","import React, { Component } from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport { allMovieData } from './fetch';\nimport MovieContainer from './MovieContainer';\nimport './App.css';\nimport Header from './Header';\nimport SelectedPage from './SelectedPage';\n\nclass App extends Component {\n  constructor() { \n    super()\n    this.state = {\n      movies: [],\n      filteredMovies: [],\n      currentSection: 'mainPage',\n      selectedID: 0,\n      error: ''\n    }\n  }\n\n  componentDidMount = () => {\n    return allMovieData()\n      .then(data => this.setState({ movies: data.movies }))\n      .catch(err => {\n        this.setState({error: err})\n      });\n  }\n\n  filterMovies = (e) => {\n    const filteredMovies = this.state.movies.filter(entry => entry.title.toLowerCase().includes(e.toLowerCase()))\n    this.setState({\n      filteredMovies: filteredMovies\n    })\n  }\n\n  render() {\n    return (\n      <main className='App'>\n        <Header filterMovies={this.filterMovies}/>\n        <Routes>\n          <Route path=\"/\" element={<MovieContainer movies={this.state.movies} filteredMovies={this.state.filteredMovies} />}/>\n          <Route path=\"/:movieId\" element={<SelectedPage />}/>\n        </Routes>\n        {this.state.error && <p>Something went wrong -- check your network</p>}\n      </main>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}